<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd">

    <view-state id="list" view="list.xhtml">
        <on-render>
            <evaluate expression="operationService.listOperation()" result="viewScope.operations"
                      result-type="dataModel"/>
        </on-render>

        <transition on="select" to="details">
            <set name="flowScope.operationId" value="operations.selectedRow.id" type="long"/>
        </transition>

        <transition on="create" to="edit">
            <evaluate expression="new ru.lephant.learning.spring.SomeFirmWebFlow.entities.Operation()"
                      result="flowScope.operation"
                      result-type="ru.lephant.learning.spring.SomeFirmWebFlow.entities.Operation"/>
        </transition>
    </view-state>


    <view-state id="details" view="details.xhtml">
        <on-render>
            <evaluate expression="operationService.getOperationById(flowScope.operationId)" result="flowScope.operation"
                      result-type="ru.lephant.learning.spring.SomeFirmWebFlow.entities.Operation"/>
        </on-render>

        <transition on="delete" to="deleteOperation"/>
        <transition on="edit" to="edit"/>
        <transition on="return" to="end"/>
    </view-state>


    <view-state id="edit" view="edit.xhtml" model="operation">

        <var class="ru.lephant.learning.spring.SomeFirmWebFlow.operation.FileUploadBean" name="fileUploadBean"/>

        <var class="ru.lephant.learning.spring.SomeFirmWebFlow.entities.OperationSacrificialMaterial"
             name="addingSacrificialMaterial"/>

        <var class="ru.lephant.learning.spring.SomeFirmWebFlow.entities.OperationTool"
             name="addingTool"/>


        <on-render>
            <evaluate expression="operation.getTools()" result="viewScope.tools" result-type="dataModel"/>
            <evaluate expression="operation.getSacrificialMaterials()" result="viewScope.sacrificialMaterials"
                      result-type="dataModel"/>
        </on-render>


        <transition on="showSplitMaterialDialog">
            <evaluate
                    expression="new ru.lephant.learning.spring.SomeFirmWebFlow.entities.OperationSacrificialMaterial(operation)"
                    result="viewScope.addingSacrificialMaterial"
                    result-type="ru.lephant.learning.spring.SomeFirmWebFlow.entities.OperationSacrificialMaterial"
            />
        </transition>

        <transition on="cancelMaterial">
            <evaluate expression="viewScope.addingSacrificialMaterial = null"/>
        </transition>

        <transition on="addMaterial">
            <evaluate expression="operationService.addMaterialToList(operation, addingSacrificialMaterial, messageContext)"/>
        </transition>

        <transition on="deleteMaterial">
            <evaluate expression="operationService.removeMaterialFromList(operation, sacrificialMaterials.selectedRow, messageContext)"/>
        </transition>


        <transition on="showSplitToolDialog">
            <evaluate
                    expression="new ru.lephant.learning.spring.SomeFirmWebFlow.entities.OperationTool(operation)"
                    result="viewScope.addingTool"
                    result-type="ru.lephant.learning.spring.SomeFirmWebFlow.entities.OperationTool"
            />
        </transition>

        <transition on="cancelTool">
            <evaluate expression="viewScope.addingTool = null"/>
        </transition>

        <transition on="addTool">
            <evaluate expression="operationService.addToolToList(operation, addingTool, messageContext)"/>
        </transition>

        <transition on="deleteTool">
            <evaluate expression="operationService.removeToolFromList(operation, tools.selectedRow, messageContext)"/>
        </transition>


        <transition on="save" to="list">
            <evaluate expression="operationService.saveOperation(flowScope.operation, fileUploadBean, messageContext)"/>
        </transition>

        <transition on="cancel" to="end" bind="false" validate="false"/>


        <transition on="clearImage">
            <evaluate expression="fileUploadBean.clear()"/>
            <render fragments="mainForm:imageMessage"/>
        </transition>

        <transition on="imageIsUpload">
            <render fragments="mainForm:imageMessage"/>
        </transition>
    </view-state>


    <action-state id="deleteOperation">
        <evaluate expression="operationService.deleteOperation(flowScope.operation.id, messageContext)"/>
        <transition on="yes" to="list"/>
        <transition on="no" to="details"/>
    </action-state>


    <end-state id="end"/>
</flow>